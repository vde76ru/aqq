// /var/www/www-root/data/site/vdestor.ru/src/js/utils.js

// ============================================================================
// –ü–ï–†–ï–•–û–î–ù–ê–Ø –í–ï–†–°–ò–Ø utils.js
// –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –º–∏–≥—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
// ============================================================================

import { productsManager } from './ProductsManager.js';

// ===== TOAST –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø =====
export function showToast(message, isError = false) {
    const toast = document.createElement('div');
    toast.className = `toast ${isError ? 'toast-error' : 'toast-success'} show`;
    toast.innerHTML = `
        <div class="toast-content">
            <div class="toast-message">${message}</div>
        </div>
    `;
    
    const container = document.getElementById('toastContainer') || document.body;
    container.appendChild(toast);
    
    setTimeout(() => toast.remove(), 3000);
}

// ===== –ò–ù–î–ò–ö–ê–¢–û–†–´ –ó–ê–ì–†–£–ó–ö–ò =====
export function showLoadingIndicator() {
    const existing = document.querySelector('.loading-indicator');
    if (existing) return;
    
    const indicator = document.createElement('div');
    indicator.className = 'loading-indicator';
    indicator.innerHTML = `
        <div class="spinner-border spinner-border-sm"></div>
        <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
    `;
    indicator.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 20px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        gap: 10px;
        z-index: 9999;
    `;
    document.body.appendChild(indicator);
}

export function hideLoadingIndicator() {
    const indicator = document.querySelector('.loading-indicator');
    if (indicator) {
        indicator.remove();
    }
}

// ===== –ó–ê–ì–†–£–ó–ö–ê –¢–û–í–ê–†–û–í (–ü–ï–†–ï–•–û–î–ù–ê–Ø –í–ï–†–°–ò–Ø) =====
/**
 * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ productsManager.fetchProducts() –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
export async function fetchProducts() {
    console.warn('‚ö†Ô∏è [DEPRECATED] utils.fetchProducts() —É—Å—Ç–∞—Ä–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ productsManager.fetchProducts()');
    
    // –ü–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ–º –Ω–∞ –Ω–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    if (productsManager && typeof productsManager.fetchProducts === 'function') {
        return await productsManager.fetchProducts();
    }
    
    // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –Ω–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    console.error('‚ùå ProductsManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
    
    try {
        showLoadingIndicator();
        
        const params = new URLSearchParams({
            q: window.appliedFilters?.search || '',
            page: window.currentPage || 1,
            limit: window.itemsPerPage || 20,
            city_id: document.getElementById('citySelect')?.value || '1'
        });
        
        const response = await fetch(`/api/search?${params}`);
        const result = await response.json();
        
        if (result.success !== false && result.data) {
            window.productsData = result.data.products || [];
            window.totalProducts = result.data.total || 0;
            
            if (window.renderProductsTable) {
                window.renderProductsTable();
            }
        }
        
    } catch (error) {
        console.error('Fallback fetch error:', error);
        showToast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤', true);
    } finally {
        hideLoadingIndicator();
    }
}

// ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====
export function getCurrentCityId() {
    return document.getElementById('citySelect')?.value || '1';
}

export function formatPrice(price) {
    if (!price) return '‚Äî';
    return `${parseFloat(price).toFixed(2)} ‚ÇΩ`;
}

export function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// ===== –ú–ò–ì–†–ê–¶–ò–û–ù–ù–´–ï –ó–ê–ú–ï–¢–ö–ò =====
/**
 * –ü–õ–ê–ù –ú–ò–ì–†–ê–¶–ò–ò:
 * 
 * 1. ‚úÖ showToast - –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ utils (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ–∑–¥–µ)
 * 2. ‚úÖ showLoadingIndicator/hideLoadingIndicator - –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ utils
 * 3. ‚ö†Ô∏è fetchProducts - –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ deprecated, –ø–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ—Ç –Ω–∞ ProductsManager
 * 4. üîÑ –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –≤—ã–∑–æ–≤—ã utils.fetchProducts() –Ω–∞ productsManager.fetchProducts()
 * 
 * –í –±—É–¥—É—â–µ–º utils.js –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã,
 * –∞ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–µ–¥–µ—Ç –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã.
 */